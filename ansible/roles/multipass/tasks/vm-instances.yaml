# Input (machine-readable):
# multipass_vm_instances:
# - name: templ0-vm0
#   vcpu: 1
#   disk: 5Gi
#   mem: 2Gi
#   networks: []
#   cloud_init: ''
#   state: stopped # maybe for maintenance reasons
# - name: templ0-vm1
#   vcpu: 1
#   disk: 5Gi
#   mem: 2Gi
#   networks: []
#   cloud_init: ''
#   state: running
# - name: templ1-vm0
#   vcpu: 2
#   disk: 20Gi
#   mem: 3Gi
#   networks:
#   - name: "eth0"
#     mode: auto
#   cloud_init: microk8s.yml
#   state: running | stopped | deleted | suspended 


# API Notes
# state:
# See https://github.com/canonical/multipass/blob/80938d0f556060ecab0ec4020fa71efa62ceaf86/src/rpc/multipass.proto#L177
# - stopped: vm is effectively shutdown
# - suspended: vm is effectively slept; maybe to preserve NRG
# LIMITATIONS: multipass purge not supported

- name: Get all created multipass instances
  include_tasks: mp-all-instances.yml

  # current_state: running | stopped | deleted | suspended | not_exist
- name: Initialize current_state
  set_fact: 
    current_state: {}
- name: Propagate current_state
  set_fact: 
    current_state: >
      {{ current_state| combine({
        item.name: 
          (
            (mp_instances| selectattr('name','==', item.name))[0]| 
              default({'state':'not_exist'})
          ).state | lower
      }) }}
    # "{{ ((mp_instances|selectattr('name', '==', item.name))[0]|default({'state':'not_exist'})).state }}"
  check_mode: false
  loop: "{{ multipass_vm_instances }}"

- name: Provision
  include_tasks: "mp-provision-{{ ansible_os_family|lower }}.yml"
  when: not ansible_check_mode

# Check & output results
- name: Reacquire multipass instances
  include_tasks: mp-all-instances.yml

- name: "Show all vms exists in the node"
  debug: {msg: "all vms: {{ mp_instances }}"}
